*,
::after,
::before {
    box-sizing: border-box;
    color     : $text;
    @include default-transition;
    font-size: 13px;
}

html {
    -ms-text-size-adjust   : 100%;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing : antialiased;
    font-family            : 'Mulish', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Helvetica Neue', Arial, sans-serif;
    background-color       : $background;
}


::selection {
    background: $primary;
    color     : $text-inverse;
}


.bg--dark {
    background-color: $background-dark;

    &.bg--recursive {
        &>* {
            background-color: $background-dark;
        }
    }
}

.bg--foreground {
    background-color: $background-foreground;

    &.bg--recursive {
        &>* {
            background-color: $background-foreground;
        }
    }
}

.color--light {
    color: $text-light;

    &.color--recursive {
        &>* {
            color: $text-light;
        }
    }
}

.color--inverse {
    color: $text-inverse;

    &.color--recursive {
        &>* {
            color: $text-inverse;
        }
    }
}

.color--primary {
    color: $primary;

    &.color--recursive {
        &>* {
            color: $primary;
        }
    }
}

.button {
    display         : inline-block;
    padding         : $padding-s $padding-l;
    background-color: $background-foreground;
    color           : $primary;
    font-weight     : 600;
    border          : 1px solid $border-color;
    border-radius   : $border-radius;

    -moz-user-select   : none;
    -webkit-user-select: none;
    -ms-user-select    : none;
    user-select        : none;
    -o-user-select     : none;

    &:hover {
        border-color: $border-color--hover;
        color       : darken($primary, 5);
        cursor      : pointer;
        @include default-border-shadow();
    }

    &.button--disabled {
        position: relative;
        cursor  : not-allowed;

        &:hover {
            border-color    : $border-color;
            background-color: $background-foreground;
            color           : $primary;
        }

        &::after {
            position: absolute;

            content: "";

            top : 0;
            left: 0;

            height: 100%;
            width : 100%;

            background-color: rgba($background-foreground, 0.4);

            border-radius: $border-color;
        }
    }

    @each $key,
    $map in $button-colors {
        &.button--#{$key} {
            $--background-color: map-get($map, "background-color");
            $--text-color      : map-get($map, "color");
            background-color   : $--background-color;
            color              : $--text-color;
            border-color       : $--background-color;

            &:hover {
                background-color: darken($--background-color, 5);
                color           : $--text-color;
                border-color    : darken($--background-color, 5);
                box-shadow      : none;
            }

            &.button--disabled:hover {
                background-color: $--background-color;
                color           : $--text-color;
                border-color    : $--background-color;
            }
        }

    }
}

.flex {
    display: flex;

    &.flex--row {
        flex-direction: row;
    }

    &.flex--column {
        flex-direction: column;
    }

    &.flex--center {
        justify-content: center;
        align-items    : center;
    }

    &.flex--button-row {
        flex-direction : row;
        justify-content: flex-end;
        align-items    : center;

        .button:not(:last-child) {
            margin-right: $padding-s;
        }
    }
}

.flex__spacer {
    flex-grow: 1;
} 

.section {
    padding: $padding-l 0;

    .section__content {
        margin: 0 auto;
        width: $xs-content-size;

        @media screen and (min-width: $s-display-size) {
            width: $s-content-size;
        }

        @media screen and (min-width: $m-display-size) {
            width: $m-content-size;
        }

        @media screen and (min-width: $l-display-size) {
            width: $l-content-size;
        }

        @media screen and (min-width: $xl-display-size) {
            width: $xl-content-size;
        }

        @media screen and (min-width: $xxl-display-size) {
            width: $xxl-content-size;
        }
    }
}

.content__container {
  width: 100%;
  padding: $padding-s;
  @media screen and (min-width: $l-display-size) {
      padding: $padding-l;
  }
}

.card {
    background-color: $background-foreground;
    border-radius   : $border-radius;
    @include default-border-shadow();

    &.card--padded {
        padding: $padding-m;
    }
}

.input {
    display       : flex;
    flex-direction: column;

    .input__label {
        font-size    : 0.9rem;
        color        : $text-light;
        margin-bottom: $padding-s;
    }

    .input__text {
        outline         : none;
        display         : inline-block;
        padding         : $padding-s;
        background-color: transparent;
        color           : $text;
        border          : 1px solid $border-color;
        border-radius   : $border-radius;
        width           : 100%;

        &::placeholder {
            color: $text-light;
        }

        &:hover,
        &:focus {
            border-color: $border-color--hover;
        }
        &.input__text--non-resizable {
            resize: none;
        }
    }
}

.form-container {
    & > *:not(:first-child) {
        margin-top: $padding-m;
    }
}